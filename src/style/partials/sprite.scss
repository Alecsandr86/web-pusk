/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$burger-button-name: 'burger-button';
$burger-button-x: 156px;
$burger-button-y: 47px;
$burger-button-offset-x: -156px;
$burger-button-offset-y: -47px;
$burger-button-width: 23px;
$burger-button-height: 18px;
$burger-button-total-width: 193px;
$burger-button-total-height: 155px;
$burger-button-image: '../images/sprite.png';
$burger-button: (156px, 47px, -156px, -47px, 23px, 18px, 193px, 155px, '../images/sprite.png', 'burger-button', );
$nav-ico-1-name: 'nav-ico-1';
$nav-ico-1-x: 0px;
$nav-ico-1-y: 0px;
$nav-ico-1-offset-x: 0px;
$nav-ico-1-offset-y: 0px;
$nav-ico-1-width: 78px;
$nav-ico-1-height: 78px;
$nav-ico-1-total-width: 193px;
$nav-ico-1-total-height: 155px;
$nav-ico-1-image: '../images/sprite.png';
$nav-ico-1: (0px, 0px, 0px, 0px, 78px, 78px, 193px, 155px, '../images/sprite.png', 'nav-ico-1', );
$nav-ico-2-name: 'nav-ico-2';
$nav-ico-2-x: 0px;
$nav-ico-2-y: 78px;
$nav-ico-2-offset-x: 0px;
$nav-ico-2-offset-y: -78px;
$nav-ico-2-width: 78px;
$nav-ico-2-height: 77px;
$nav-ico-2-total-width: 193px;
$nav-ico-2-total-height: 155px;
$nav-ico-2-image: '../images/sprite.png';
$nav-ico-2: (0px, 78px, 0px, -78px, 78px, 77px, 193px, 155px, '../images/sprite.png', 'nav-ico-2', );
$nav-ico-3-name: 'nav-ico-3';
$nav-ico-3-x: 78px;
$nav-ico-3-y: 78px;
$nav-ico-3-offset-x: -78px;
$nav-ico-3-offset-y: -78px;
$nav-ico-3-width: 78px;
$nav-ico-3-height: 77px;
$nav-ico-3-total-width: 193px;
$nav-ico-3-total-height: 155px;
$nav-ico-3-image: '../images/sprite.png';
$nav-ico-3: (78px, 78px, -78px, -78px, 78px, 77px, 193px, 155px, '../images/sprite.png', 'nav-ico-3', );
$nav-ico-4-name: 'nav-ico-4';
$nav-ico-4-x: 78px;
$nav-ico-4-y: 0px;
$nav-ico-4-offset-x: -78px;
$nav-ico-4-offset-y: 0px;
$nav-ico-4-width: 78px;
$nav-ico-4-height: 78px;
$nav-ico-4-total-width: 193px;
$nav-ico-4-total-height: 155px;
$nav-ico-4-image: '../images/sprite.png';
$nav-ico-4: (78px, 0px, -78px, 0px, 78px, 78px, 193px, 155px, '../images/sprite.png', 'nav-ico-4', );
$thee-line-name: 'thee-line';
$thee-line-x: 156px;
$thee-line-y: 0px;
$thee-line-offset-x: -156px;
$thee-line-offset-y: 0px;
$thee-line-width: 37px;
$thee-line-height: 47px;
$thee-line-total-width: 193px;
$thee-line-total-height: 155px;
$thee-line-image: '../images/sprite.png';
$thee-line: (156px, 0px, -156px, 0px, 37px, 47px, 193px, 155px, '../images/sprite.png', 'thee-line', );
$spritesheet-width: 193px;
$spritesheet-height: 155px;
$spritesheet-image: '../images/sprite.png';
$spritesheet-sprites: ($burger-button, $nav-ico-1, $nav-ico-2, $nav-ico-3, $nav-ico-4, $thee-line, );
$spritesheet: (193px, 155px, '../images/sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Here are example usages in HTML:

`display: block` sprite:
<div class="icon-home"></div>

`display: inline-block` sprite:
<img class="icon-home" />
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
